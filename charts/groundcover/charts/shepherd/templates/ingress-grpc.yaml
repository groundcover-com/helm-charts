{{- if .Values.grpcIngress.enabled }}
{{- $ingressApiIsStable := eq (include "shepherd.ingress.isStable" .) "true" -}}
{{- $ingressSupportsIngressClassName := eq (include "shepherd.ingress.supportsIngressClassName" .) "true" -}}
{{- $ingressSupportsPathType := eq (include "shepherd.ingress.supportsPathType" .) "true" -}}
{{- $servicePort := .Values.service.grpcPort -}}
{{- $ingressPathType := .Values.grpcIngress.pathType -}}
apiVersion: {{ include "shepherd.ingress.apiVersion" . }}
kind: Ingress
metadata:
{{- if .Values.grpcIngress.annotations }}
  annotations:
{{ toYaml .Values.grpcIngress.annotations | indent 4 }}
{{- end }}
  labels:
  {{- include "chart.labels" . | nindent 4 }}
  {{ with .Values.grpcIngress.extraLabels }}
{{ toYaml . | indent 4 }}
  {{ end }}
  name: {{ template "chart.name" . }}-grpc
  namespace: {{ .Release.Namespace }}
spec:
  {{- if and $ingressSupportsIngressClassName .Values.grpcIngress.ingressClassName }}
  ingressClassName: {{ .Values.grpcIngress.ingressClassName }}
  {{- end }}
  rules:
  {{- $serviceName := include "chart.name" . }}
  {{- range .Values.grpcIngress.hosts }}
  - host: {{ .host }}
    http:
      paths:
        - path: {{ .path }}
          {{- if $ingressSupportsPathType }}
          pathType: {{ $ingressPathType }}
          {{- end }}
          backend:
            {{- if $ingressApiIsStable }}
            service:
              name: {{ $serviceName }}
              port:
                number: {{ $servicePort }}
            {{- else }}
            serviceName: {{ $serviceName }}
            servicePort: {{ $servicePort }}
            {{- end }}
  {{- end -}}
{{- if .Values.grpcIngress.tls }}
  tls:
{{ toYaml .Values.grpcIngress.tls | indent 4 }}
{{- end -}}
{{- end -}}
