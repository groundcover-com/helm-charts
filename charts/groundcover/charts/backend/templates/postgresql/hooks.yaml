{{- if .Values.global.postgresql.enabled }}
{{- $name := (printf "%s-create-dbs" (include "postgresql.primary.fullname" $)) -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $name }}
  namespace: {{ .Release.Namespace }}
  annotations:
  {{- include "postgresql.job.create-dbs.annotations" $ | nindent 4 }}
spec:
  template:
    spec:
      restartPolicy: OnFailure
      initContainers:
      - name: wait-for-db
        image: '{{ include "postgresql.image" . }}'
        env:
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: '{{ include "postgresql.secretName" . }}'
                key: '{{ include "postgresql.adminPasswordKey" . }}'
          - name: PGHOST
            value: '{{ splitList ":" (include "postgresql.base.url" .) | first }}'
          - name: PGPORT
            value: '{{ splitList ":" (include "postgresql.base.url" .) | last }}'
        command:
          - /bin/bash
          - -c
          - |
            set -eu
            . /opt/bitnami/scripts/libautoctl.sh
            wait_until_can_connect "postgres://postgres:${PGPASSWORD}@${PGHOST}:${PGPORT}/postgres"
      containers:
      - name: psql
        image: '{{ include "postgresql.image" . }}'
        command:
          - "/bin/sh"
          - "-c"
          - |
            set -eu 

            cp /create-dbs/create-dbs.sh /tmp
            chmod u+x /tmp/create-dbs.sh
            /tmp/create-dbs.sh
        env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: '{{ include "postgresql.secretName" . }}'
                key: '{{ include "postgresql.adminPasswordKey" . }}'
          - name: INITDB_PGHOST
            value: '{{ splitList ":" (include "postgresql.base.url" .) | first }}'
          - name: INITDB_PGPORT
            value: '{{ splitList ":" (include "postgresql.base.url" .) | last }}'
        volumeMounts:
          - mountPath: /create-dbs
            name: create-dbs

      volumes:
      - name: create-dbs
        configMap:
          name: {{ include "postgresql.primary.init-scripts-configmap" . }}
          items:
          - key: create-dbs.sh
            path: create-dbs.sh

{{ end -}}