{{- if .Values.global.temporal.enabled }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-temporal-namespace-setup
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation
  labels:
    app.kubernetes.io/name: temporal-namespace-setup
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: temporal
    {{- include "groundcover.labels" . | nindent 4 }}
spec:
  backoffLimit: 10
  activeDeadlineSeconds: 600
  template:
    metadata:
      labels:
        app.kubernetes.io/name: temporal-namespace-setup
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: temporal
    spec:
      restartPolicy: OnFailure
      {{- with include "temporal.nodeSelector" . }}
      nodeSelector:
        {{- . | nindent 8 }}
      {{- end }}
      {{- with include "temporal.tolerations" . }}
      tolerations:
        {{- . | nindent 8 }}
      {{- end }}
      containers:
      - name: create-namespace
        image: us-docker.pkg.dev/groundcovercom/repo/temporalio/admin-tools:1.22.6
        env:
        - name: TEMPORAL_ADDRESS
          value: "{{ .Release.Name }}-temporal-frontend:7233"
        command: ["/bin/bash", "-c"]
        args:
        - |
          set -ex

          echo "Waiting for Temporal frontend to be ready..."
          for i in {1..60}; do
            if tctl --address $TEMPORAL_ADDRESS cluster health 2>/dev/null | grep -q SERVING; then
              echo "Temporal frontend is ready"
              break
            fi
            echo "Attempt $i/60: Temporal frontend not ready yet, waiting..."
            sleep 5
          done

          echo "Checking if default namespace exists..."
          if tctl --address $TEMPORAL_ADDRESS namespace list 2>/dev/null | grep -q "^Name: default$"; then
            echo "Default namespace already exists, skipping creation"
          else
            echo "Creating default namespace..."
            tctl --address $TEMPORAL_ADDRESS namespace register \
              default \
              --description "Default namespace for Temporal workflows" \
              --retention 7d \
              --active_cluster active || {
                echo "Namespace registration failed, checking if it was created by another process..."
                if tctl --address $TEMPORAL_ADDRESS namespace list 2>/dev/null | grep -q "^Name: default$"; then
                  echo "Default namespace exists now (created by another process)"
                else
                  echo "Failed to create namespace"
                  exit 1
                fi
            }
            echo "Default namespace created successfully"
          fi

          echo "Namespace setup complete"
{{- end }}