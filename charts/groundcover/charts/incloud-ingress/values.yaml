ingressClass: kong
secure: '{{ include "incloud-ingress.secure" .}}'

kong-crds:
  upgradeCRDs: true
  image:
    repository: public.ecr.aws/groundcovercom/bitnami/kubectl

kong:
  replicaCount: 2
  image:
    tag: 3.4.2
    repository: public.ecr.aws/groundcovercom/kong
  env:
    anonymous_reports: "off"
    dump_config: "true"
    headers: "off"
    mem_cache_size: "256m"
    upstream_keepalive_max_requests: "0"
    nginx_http_client_body_buffer_size: "10m"
    nginx_mem_cache_size: "256m"
  proxy:
    http:
      enabled: false
    tls:
      enabled: true
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: nlb
      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          app.kubernetes.io/name: kong
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          app.kubernetes.io/name: kong
  podDisruptionBudget:
    enabled: true
    maxUnavailable: "1%"
## Kong Plugins for inCloud functionality
datasource:
  enabled: false

## Enabled rum ingress with cors
rum:
  enabled: true
ingress:
  annotations:
  tls:
    enabled: false
    certificate:
      name: site-certificate
      renewBefore: 600h # only s (seconds), m (minutes), and h (hours) are supported 
      acme:
        server: https://acme-v02.api.letsencrypt.org/directory

cert-manager:
  enabled: false
  crds:
    enabled: false
  prometheus:
    enabled: true
    servicemonitor:
      enabled: false

cert-manager-crds:
  enabled: false
  upgradeCRDs: false
