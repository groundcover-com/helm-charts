apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ printf "%s-otel-http" (include "incloud-ingress.name" .) | trunc 63 | trimSuffix "-" }}
  annotations:
    konghq.com/host-aliases: "api-otel-http.*"
    konghq.com/plugins: {{ printf "%s-auth" .Release.Name | quote }}
    konghq.com/protocols: {{ ternary "https" "http" .Values.kong.proxy.tls.enabled | quote }}
spec:
  ingressClassName: kong
  rules:
    - http:
        paths:
          - path: {{ get (urlParse (include "opentelemetry-collector.loki.http.url" .)) "path" }} 
            pathType: Exact
            backend:
              service:
                name: {{ include "opentelemetry-collector.fullname" . }}
                port:
                  number: {{ index .Values.global "opentelemetry-collector" "ports" "loki-http" "servicePort" | int }}
    - http:
        paths:
          - path: {{ get (urlParse (include "opentelemetry-collector.health.http.url" .)) "path" }} 
            pathType: Exact
            backend:
              service:
                name: {{ include "opentelemetry-collector.fullname" . }}
                port:
                  number: {{ index .Values.global "opentelemetry-collector" "ports" "health" "servicePort" | int }}
    - http:
        paths:
          - path: {{ get (urlParse (include "opentelemetry-collector.datadogapm.tracesv03.http.url" .)) "path" }} 
            pathType: Exact
            backend:
              service:
                name: {{ include "opentelemetry-collector.fullname" . }}
                port:
                  number: {{ index .Values.global "opentelemetry-collector" "ports" "datadogapm" "servicePort" | int }}
    - http:
        paths:
          - path: {{ get (urlParse (include "opentelemetry-collector.datadogapm.tracesv04.http.url" .)) "path" }} 
            pathType: Exact
            backend:
              service:
                name: {{ include "opentelemetry-collector.fullname" . }}
                port:
                  number: {{ index .Values.global "opentelemetry-collector" "ports" "datadogapm" "servicePort" | int }}
    - http:
        paths:
          - path: {{ get (urlParse (include "opentelemetry-collector.datadogapm.tracesv05.http.url" .)) "path" }} 
            pathType: Exact
            backend:
              service:
                name: {{ include "opentelemetry-collector.fullname" . }}
                port:
                  number: {{ index .Values.global "opentelemetry-collector" "ports" "datadogapm" "servicePort" | int }}
    - http:
        paths:
          - path: {{ get (urlParse (include "opentelemetry-collector.datadogapm.tracesv07.http.url" .)) "path" }} 
            pathType: Exact
            backend:
              service:
                name: {{ include "opentelemetry-collector.fullname" . }}
                port:
                  number: {{ index .Values.global "opentelemetry-collector" "ports" "datadogapm" "servicePort" | int }}
    - http:
        paths:
          - path: {{ get (urlParse (include "opentelemetry-collector.otlptraces.http.url" .)) "path" }} 
            pathType: Exact
            backend:
              service:
                name: {{ include "opentelemetry-collector.fullname" . }}
                port:
                  number: {{ index .Values.global "opentelemetry-collector" "ports" "otlp-http" "servicePort" | int }}
    - http:
        paths:
          - path: {{ get (urlParse (include "opentelemetry-collector.otlplogs.http.url" .)) "path" }} 
            pathType: Exact
            backend:
              service:
                name: {{ include "opentelemetry-collector.fullname" . }}
                port:
                  number: {{ index .Values.global "opentelemetry-collector" "ports" "otlp-http" "servicePort" | int }}
    - http:
        paths:
          - path: {{ get (urlParse (include "opentelemetry-collector.otlpmetrics.http.url" .)) "path" }} 
            pathType: Exact
            backend:
              service:
                name: {{ include "opentelemetry-collector.fullname" . }}
                port:
                  number: {{ index .Values.global "opentelemetry-collector" "ports" "otlp-http" "servicePort" | int }}
    - http:
        paths:
          - path: {{ get (urlParse (include "opentelemetry-collector.awsfirehose.http.url" .)) "path" }} 
            pathType: Exact
            backend:
              service:
                name: {{ include "opentelemetry-collector.fullname" . }}
                port:
                  number: {{ index .Values.global "opentelemetry-collector" "ports" "awsfirehose" "servicePort" | int }}

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ printf "%s-metrics-http" (include "incloud-ingress.name" .) | trunc 63 | trimSuffix "-" }}
  annotations:
    konghq.com/host-aliases: "metrics-http.*"
    konghq.com/plugins: {{ printf "%s-auth" .Release.Name | quote }}
    konghq.com/protocols: {{ ternary "https" "http" .Values.kong.proxy.tls.enabled | quote }}
spec:
  ingressClassName: kong
  rules:
    - http:
        paths:
          - path: {{ get (urlParse (include "metrics-ingester.write.http.url" .)) "path" }} 
            pathType: Exact
            backend:
              service:
                name: {{ include "metrics-ingester.fullname" . }}
                port:
                  name: http
          - path: {{ get (urlParse (include "metrics-ingester.health.http.url" .)) "path" }} 
            pathType: Exact
            backend:
              service:
                name: {{ include "metrics-ingester.fullname" . }}
                port:
                  name: http
          - path: {{ get (urlParse (include "metrics-ingester.datadog.http.v1.url" .)) "path" }} 
            pathType: Exact
            backend:
              service:
                name: {{ include "metrics-ingester.fullname" . }}
                port:
                  name: http
          - path: {{ get (urlParse (include "metrics-ingester.datadog.http.v2.url" .)) "path" }} 
            pathType: Exact
            backend:
              service:
                name: {{ include "metrics-ingester.fullname" . }}
                port:
                  name: http

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ printf "%s-grpc" (include "incloud-ingress.name" .) | trunc 63 | trimSuffix "-" }}
  annotations:
    konghq.com/host-aliases: "api-otel-grpc.*"
    konghq.com/headers.content-type: application/grpc
    konghq.com/plugins: {{ printf "%s-auth" .Release.Name | quote }}
    konghq.com/protocols: {{ ternary "grpcs" "grpc" .Values.kong.proxy.tls.enabled | quote }}
spec:
  ingressClassName: kong
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ printf "%s-grpc" (include "opentelemetry-collector.fullname" .) }}
                port:
                  number: {{ index .Values.global "opentelemetry-collector" "ports" "otlp" "servicePort" | int }}

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ printf "%s-status" (include "incloud-ingress.name" .) | trunc 63 | trimSuffix "-" }}
  annotations:
    konghq.com/host-aliases: "status.*"
    konghq.com/plugins: {{ printf "%s-auth" .Release.Name | quote }}
    konghq.com/protocols: {{ ternary "https" "http" .Values.kong.proxy.tls.enabled | quote }}
spec:
  ingressClassName: kong
  rules:
    - http:
        paths:
          - path: {{ get (urlParse (include "portal.live.http.url" .)) "path" }} 
            pathType: Exact
            backend:
              service:
                name: {{ include "portal.fullname" . }}
                port:
                  name: http

---

{{- if .Values.datasource.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ printf "%s-clickhouse" (include "incloud-ingress.name" .) | trunc 63 | trimSuffix "-" }}
  annotations:
    konghq.com/protocols: {{ ternary "https" "http" .Values.kong.proxy.tls.enabled | quote }}
    konghq.com/headers.X-Clickhouse-User: default
    konghq.com/plugins: {{ printf "%s-auth,clickhouse-ds-rewrite" .Release.Name | quote }}
spec:
  ingressClassName: kong
  rules:
    - http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ include "clickhouse.fullname" . }}
                port:
                  name: http

--- 

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ printf "%s-prometheus" (include "incloud-ingress.name" .) | trunc 63 | trimSuffix "-" }}
  annotations:
    konghq.com/protocols: {{ ternary "https" "http" .Values.kong.proxy.tls.enabled | quote }}
    konghq.com/strip-path: "true"
    konghq.com/plugins: {{ printf "%s-auth" .Release.Name | quote }}
spec:
  ingressClassName: kong
  rules:
    - http:
        paths:
          - path: /datasources/prometheus
            pathType: Prefix
            backend:
              service:
                name: {{ include "victoria-metrics.service.fullname" . }}
                port:
                  name: http
{{- end -}}
