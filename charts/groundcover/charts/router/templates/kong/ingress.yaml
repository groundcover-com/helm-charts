{{- if .Values.onprem.enabled -}}
---
{{- if .Values.deployedIngresses.ui }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ printf "%s-plain" (include "router.fullname" .) }}
  annotations:
    konghq.com/protocols: http,https
  labels:
    {{- include "router.labels" . | nindent 4 }}
spec:
  ingressClassName: {{ .Values.kong.ingressController.ingressClass }}
  {{- if .Values.global.ingress.enableTLS }}
  tls:
    - secretName: {{ include "incloud-ingress.certificate.name" . }}
      hosts: {{ include "incloud-ingress.certificate.dnsNames" .  | nindent 8 }}
    {{- if not (empty .Values.global.ingress.customDomains) }}
    - secretName: {{ include "incloud-ingress.customCertificate.name" . }}
      hosts: {{ include "incloud-ingress.customCertificate.dnsNames" .  | nindent 8 }}
    {{- end }}
  {{- end }}
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ include "router.service.name" . }}
                port:
                  name: frontend
{{- end }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ printf "%s-auth" (include "router.fullname" .) }}
  annotations:
    konghq.com/plugins: key-auth
    konghq.com/protocols: http,https
  labels:
    {{- include "router.labels" . | nindent 4 }}
spec:
  ingressClassName: {{ .Values.kong.ingressController.ingressClass }}
  {{- if .Values.global.ingress.enableTLS }}
  tls:
    - secretName: {{ include "incloud-ingress.certificate.name" . }}
      hosts: {{ include "incloud-ingress.certificate.dnsNames" .  | nindent 8 }}
    {{- if not (empty .Values.global.ingress.customDomains) }}
    - secretName: {{ include "incloud-ingress.customCertificate.name" . }}
      hosts: {{ include "incloud-ingress.customCertificate.dnsNames" .  | nindent 8 }}
    {{- end }}
  {{- end }}
  rules:
    - http:
        paths:
          - path: /client
            pathType: Prefix
            backend:
              service:
                name: {{ include "router.service.name" . }}
                port:
                  name: frontend
          - path: /datasources
            pathType: Prefix
            backend:
              service:
                name: {{ include "router.service.name" . }}
                port:
                  name: frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ printf "%s-clickhouse" (include "router.fullname" .) }}
  annotations:
    konghq.com/protocols: http,https
    konghq.com/headers.X-Clickhouse-User: default
    konghq.com/plugins: key-auth,clickhouse-ds-rewrite
  labels:
    {{- include "router.labels" . | nindent 4 }}
spec:
  ingressClassName: {{ .Values.kong.ingressController.ingressClass }}
  {{- if .Values.global.ingress.enableTLS }}
  tls:
    - secretName: {{ include "incloud-ingress.certificate.name" . }}
      hosts: {{ include "incloud-ingress.certificate.dnsNames" .  | nindent 8 }}
    {{- if not (empty .Values.global.ingress.customDomains) }}
    - secretName: {{ include "incloud-ingress.customCertificate.name" . }}
      hosts: {{ include "incloud-ingress.customCertificate.dnsNames" .  | nindent 8 }}
    {{- end }}
  {{- end }}
  rules:
    - http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ include "router.service.name" . }}
                port:
                  name: frontend
---
{{- if .Values.deployedIngresses.grafana }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ printf "%s-grafana" (include "router.fullname" .) }}
  annotations:
    konghq.com/protocols: http,https
    konghq.com/plugins: grafana-rewrite
    konghq.com/headers.Grafana-Terraform-Provider: "true"
  labels:
    {{- include "router.labels" . | nindent 4 }}
spec:
  ingressClassName: {{ .Values.kong.ingressController.ingressClass }}
  {{- if .Values.global.ingress.enableTLS }}
  tls:
    - secretName: {{ include "incloud-ingress.certificate.name" . }}
      hosts: {{ include "incloud-ingress.certificate.dnsNames" .  | nindent 8 }}
    {{- if not (empty .Values.global.ingress.customDomains) }}
    - secretName: {{ include "incloud-ingress.customCertificate.name" . }}
      hosts: {{ include "incloud-ingress.customCertificate.dnsNames" .  | nindent 8 }}
    {{- end }}
  {{- end }}
  rules:
    - http:
        paths:
          - path: /api/(.*)$
            pathType: Prefix
            backend:
              service:
                name: {{ include "router.service.name" . }}
                port:
                  name: frontend
{{- end }}                  
{{- end -}}