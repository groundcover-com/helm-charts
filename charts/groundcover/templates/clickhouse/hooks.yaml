{{ if and .Values.global.backend.enabled .Values.clickhouse.persistence.enabled (index .Values "volume-expansion" "enabled")}}
{{- $shouldPatchPvc := true -}}
{{- $shouldDeleteSts := true -}}
{{- $shards := .Values.clickhouse.shards | int -}}
{{- $pvcSize := $.Values.clickhouse.persistence.size -}}
{{- $pvcPatch := (include "volume-expansion.pvc.patch" $pvcSize) | fromYaml | list | toJson -}}
{{- $stsPatch := (include "volume-expansion.sts.patch" $pvcSize) | fromYaml | list | toJson -}}
{{- range $shardIndex, $e := until $shards -}}
{{- $stsName := (printf "%s-shard%d" (include "clickhouse.fullname" $) $shardIndex) -}}
{{- $name := (printf "%s-ch-%d" (include "volume-expansion.fullname" $) $shardIndex) -}}
{{- $pvcName := (printf "data-%s-0" $stsName) -}}
{{ if $.Release.IsUpgrade }}
{{- $pvc := (lookup "v1" "PersistentVolumeClaim" $.Release.Namespace $pvcName | default dict) -}}
{{- $pvcCapacitySize := ($pvc | dig "status" "capacity" "storage" $pvcSize) -}}
{{- $sts := (lookup "apps/v1" "StatefulSet" $.Release.Namespace $stsName | default dict) -}}
{{- $stsPvcSize := ($sts | dig "spec" "volumeClaimTemplates" (list dict) | first | dig "spec" "resources" "requests" "storage" $pvcSize) -}}
{{- $shouldPatchPvc = (not (eq $pvcSize $pvcCapacitySize)) -}}
{{- $shouldDeleteSts = (not (eq $pvcSize $stsPvcSize)) -}}
{{- end -}}
{{ if or $shouldPatchPvc $shouldDeleteSts }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $name }}
  labels:
  annotations:
  {{- include "volume-expansion.job.annotations" $ | nindent 4 }}
spec:
  backoffLimit: 0
  template:
    metadata:
      name: {{ $name }}
    spec:
      restartPolicy: Never
      imagePullSecrets: {{ include "imagePullSecrets" $ }}
      serviceAccountName: {{ include "volume-expansion.fullname" $ }}
      containers:
{{ if $shouldDeleteSts }}
      - name: sts-delete
        imagePullPolicy: IfNotPresent
        image: {{ include "volume-expansion.job.image" $ }}
        command:
          - /bin/sh
          - -c
          - |
            set -e
            kubectl patch sts {{ $stsName | quote }} --type json --patch {{ $stsPatch | quote }} || \
            kubectl delete sts {{ $stsName | quote }} --ignore-not-found
{{- end -}}
{{ if $shouldPatchPvc }}
      - name: pvc-patch
        imagePullPolicy: IfNotPresent
        image: {{ include "volume-expansion.job.image" $ }}
        command:
          - /bin/sh
          - -c
          - |
            set -e
            kubectl patch pvc {{ $pvcName | quote }} --type json --patch {{ $pvcPatch | quote }} || exit 0
{{- end -}}
{{- end -}}
{{- end -}}
{{- end -}}
