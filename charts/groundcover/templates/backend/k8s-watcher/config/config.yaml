{{ if .Values.global.agent.enabled }}
apiVersion: v1
data:
  config.yaml: |
    LogLevel: 4
    resourceconntimeout: 1m0s
    concurrency: 10
    productchansize: 20480
    k8sloadtimeout: 2m0s
    resyncDuration: 5m
    groundcoverVersion: ""
    podsResyncDuration: 5m
    unavailableDeploymentPollInterval: 10s
    summarizerActiveTtl: 45s
    pushsummaries: true
    productmetricsflushmintotalcounter:
      deployment_event: 1
      unavailable_deployment: 1

    deploymenteventhandler:
      samplesthreshold: 100
      issuesthreshold: 100
      interval: 60s
      samplingmode: 0 # DontSample
      aggregationCacheSize: 1024

    unavailabledeploymenthandler:
      samplesthreshold: 100
      issuesthreshold: 100
      interval: 60s
      samplingmode: 1 # DefaultSample
      aggregationCacheSize: 1024
    
    VictoriaMetrics:
      url: {{ include "metrics-ingester.base.http.internalUrl" . }}
      TLSSkipVerify: true

    KubeStateMetricsScrape:
      url: {{ include "kube-state-metrics.url" . }}
      TLSSkipVerify: true
      scrapeInterval: 15s
      scrapeTimeout: 10s

    runningNamespace: ""
    clusterId: {{ include "groundcover.clusterId" . }}
    region: {{ .Values.region }}
    env: {{ include "groundcover.env" . }}
    shouldDropRunningNamespaces: {{ .Values.shouldDropRunningNamespaces }}
    tracesNamespaceFilters: {{ toYaml .Values.tracesNamespaceFilters | nindent 6 }}
    tracesWorkloadFilters: {{ toYaml .Values.tracesWorkloadFilters | nindent 6 }}
    commitHashKeyName: {{ .Values.commitHashKeyName }}
    repositoryUrlKeyName: {{ .Values.repositoryUrlKeyName }}
    otelPreprocess : {{ .Values.global.ingestion.sendToVector }}
    otelTracesAsLogs:  {{ .Values.global.ingestion.sendToVector }}
    customOtlpEndpoint:
      endpoint: {{ include "ingestion.custom.otlp.http.url" . }}
      enableTLS: {{ include "ingestion.otlp.tls.enabled" . }}
      insecureSkipVerify: {{ .Values.global.ingestion.tls_skip_verify }}
      writeTimeout: 10s
      batchSize: 350
      concurrency: 15
      flushInterval: 1s
    tracesOtlpEndpoint:
      endpoint: {{ include "ingestion.traces.otlp.http.url" . }}
      enableTLS: {{ include "ingestion.otlp.tls.enabled" . }}
      insecureSkipVerify: {{ .Values.global.ingestion.tls_skip_verify }}
      writeTimeout: 10s
    Pprof:
      enabled: {{ include "telemetry.enabled" . }}
      interval: {{ .Values.k8sWatcher.pprof.interval }}
      exponent: {{ .Values.k8sWatcher.pprof.exponent }}
      cpuSamplingDuration: {{ .Values.k8sWatcher.pprof.cpuSamplingDuration }}
      httpUploader:
        enabled: {{ eq .Values.k8sWatcher.pprof.uploaderType "http" }}
        pushURL: {{ printf "%s/upload/pprof" (include "telemetry.metrics.base.url" .) }}
      pyroscopeUploader:
        enabled: {{ eq .Values.k8sWatcher.pprof.uploaderType "pyroscope" }}
        pushURL: {{ include "telemetry.metrics.base.url" . }}
kind: ConfigMap
metadata:
  labels:
    {{- include "groundcover.labels" . | nindent 4 }}
    {{- if .Values.k8sWatcher.additionalLabels }}
{{ toYaml .Values.k8sWatcher.additionalLabels | indent 4 }}
    {{- end }}
  annotations:
    groundcover_version: {{ default .Chart.AppVersion .Values.global.origin.tag }}
    {{- if .Values.k8sWatcher.additionalAnnotations }}
{{ toYaml .Values.k8sWatcher.additionalAnnotations | indent 4 }}
    {{- end }}
  name: k8s-watcher-config
  namespace: {{ .Release.Namespace }}
{{ end }}
