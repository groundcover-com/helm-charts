{{ if .Values.global.agent.enabled }}
apiVersion: v1
data:
  logs-scrape-config.yaml: |-
    - job_name: kubernetes-logs
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: node_name
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: instance
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_uid
        target_label: pod_uid
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_uid
        target_label: instance_id
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_id
        target_label: container_id
      - replacement: /var/log/pods/${3}_${4}_${1}/${2}/*.log
        regex: "([^;]+);([^;]+);([^;]+);([^;]+)"
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        - __meta_kubernetes_namespace
        - __meta_kubernetes_pod_name
        target_label: __path__
      - target_label: source_type
        replacement: "k8s"
    - job_name: docker-logs
      docker_sd_configs:
        - host: unix:///var/run/docker.sock
      relabel_configs:
      - source_labels: [__meta_docker_container_name]
        regex: '/(.*)'
        target_label: container
      - source_labels: [__meta_docker_container_name]
        regex: '/(.*)'
        target_label: instance
      - source_labels: [__meta_docker_container_id]
        target_label: instance_id
      - source_labels: [__meta_docker_container_id]
        target_label: container_id
      - target_label: source_type
        replacement: "docker"
  metrics-scrape-config.yaml: |-
    global:
      scrape_interval: 10s
    scrape_configs:
      - job_name: "kubernetes-pods"
        honor_labels: true
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - action: drop
            source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_part_of
            regex: groundcover
          - action: drop
            source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              - __meta_kubernetes_pod_label_app_groundcover_com_owner
            regex: kube-state-metrics;groundcover
          - action: drop
            source_labels: [__meta_kubernetes_pod_container_init]
            regex: true
          - source_labels:
              [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels:
              [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - source_labels: [__meta_kubernetes_pod_container_name]
            target_label: container
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_service_name]
            target_label: service
          - source_labels: [__meta_kubernetes_service_name]
            target_label: job
            replacement: ${1}
          - source_labels: [__meta_kubernetes_pod_node_name]
            action: replace
            target_label: node
kind: ConfigMap
metadata:
  labels:
    {{- include "groundcover.labels" . | nindent 4 }}
    {{- if .Values.agent.additionalLabels }}
{{ toYaml .Values.agent.additionalLabels | indent 4 }}
    {{- end }}
  annotations:
    groundcover_version: {{ default .Chart.AppVersion .Values.global.origin.tag }}
    {{- if .Values.agent.additionalAnnotations }}
{{ toYaml .Values.agent.additionalAnnotations | indent 4 }}
    {{- end }}
  name: sensor-scrape-configuration
  namespace: {{ .Release.Namespace }}
{{ end }}