{{ if .Values.global.agent.enabled }}
apiVersion: v1
data:
  config.yaml: |-
    startuptimeout: 120s
    concurrency: 200
    productchansize: 512
    pushsummaries: true
    productmetricsflushmintotalcounter:
      http: 5
      redis: 5
      amqp: 5
      sql: 5
      kafka: 5
      dns: 5
      grpc: 5
      mongodb: 5
      node_info: 2
      container_crash: 1
      container_info: 1
      container_info_rt: 1
      container_state: 1
      container_oomkill: 1
      pvc_info: 1
    tracyEnabled: {{ template "agent.tracy.enabled" . }}
    tracy:
      address: "ipc:///comm/tracy.data"
      timeout: 120s
      interval: 5s

    httphandler:
      samplesthreshold: 10
      issuesthreshold: 10
      sampling:
        samplingmode: 1 # DefaultSample
        samplingLimitMaxQueue: 0
        samplingLimitAgeOut: 0s
      {{ if and .Values.agent.alligator.httphandler .Values.agent.alligator.httphandler.truncationConfig }}
      truncationConfig:
        enabled: {{ coalesce .Values.agent.alligator.noPayloadsMode .Values.agent.alligator.httphandler.truncationConfig.enabled }}
        payloadSizeLimit: {{ ternary 0 .Values.agent.alligator.httphandler.truncationConfig.payloadSizeLimit .Values.agent.alligator.noPayloadsMode }}
      {{ end }}
      {{ if and .Values.agent.alligator.httphandler .Values.agent.alligator.httphandler.obfuscationConfig }}
      obfuscationConfig:
        {{ if and .Values.agent.alligator.httphandler .Values.agent.alligator.httphandler.obfuscationConfig.keyValueConfig }}
        keyValueConfig:
          enabled: {{ coalesce .Values.agent.alligator.obfuscateData .Values.agent.alligator.httphandler.obfuscationConfig.keyValueConfig.enabled }}
          caseSensitive: {{ .Values.agent.alligator.httphandler.obfuscationConfig.keyValueConfig.caseSensitive }}
          mode: {{ .Values.agent.alligator.httphandler.obfuscationConfig.keyValueConfig.mode }} 
          specificKeys: {{ .Values.agent.alligator.httphandler.obfuscationConfig.keyValueConfig.specificKeys | toJson }}
        {{ end }}
        {{ if and .Values.agent.alligator.httphandler .Values.agent.alligator.httphandler.obfuscationConfig.unstructuredConfig }}
        unstructuredConfig: 
          enabled: {{ coalesce .Values.agent.alligator.obfuscateData .Values.agent.alligator.httphandler.obfuscationConfig.unstructuredConfig.enabled }}
        {{ end }}
      {{ end }}
      interval: 30s
      summarizerActiveTtl: 45s
      aggregationCacheSize: 4096

    grpchandler:
      samplesthreshold: 10
      issuesthreshold: 10
      sampling:
        samplingmode: 1 # DefaultSample
        samplingLimitMaxQueue: 0
        samplingLimitAgeOut: 0s
      {{ if and .Values.agent.alligator.grpchandler .Values.agent.alligator.grpchandler.truncationConfig }}
      truncationConfig:
        enabled: {{ coalesce .Values.agent.alligator.noPayloadsMode .Values.agent.alligator.grpchandler.truncationConfig.enabled }}
        payloadSizeLimit: {{ ternary 0 .Values.agent.alligator.grpchandler.truncationConfig.payloadSizeLimit .Values.agent.alligator.noPayloadsMode }}
      {{ end }}
      {{ if and .Values.agent.alligator.grpchandler .Values.agent.alligator.grpchandler.obfuscationConfig }}
      obfuscationConfig:
        {{ if and .Values.agent.alligator.grpchandler .Values.agent.alligator.grpchandler.obfuscationConfig.keyValueConfig }}
        keyValueConfig:
          enabled: {{ coalesce .Values.agent.alligator.obfuscateData .Values.agent.alligator.grpchandler.obfuscationConfig.keyValueConfig.enabled }}
          caseSensitive: {{ .Values.agent.alligator.grpchandler.obfuscationConfig.keyValueConfig.caseSensitive }}
          mode: {{ .Values.agent.alligator.grpchandler.obfuscationConfig.keyValueConfig.mode }}
          specificKeys: {{ .Values.agent.alligator.grpchandler.obfuscationConfig.keyValueConfig.specificKeys | toJson }}
        {{ end }}
        {{ if and .Values.agent.alligator.grpchandler .Values.agent.alligator.grpchandler.obfuscationConfig.unstructuredConfig }}
        unstructuredConfig: 
          enabled: {{ coalesce .Values.agent.alligator.obfuscateData .Values.agent.alligator.grpchandler.obfuscationConfig.unstructuredConfig.enabled }}
        {{ end }}
      {{ end }}
      interval: 30s
      summarizerActiveTtl: 45s
      aggregationCacheSize: 4096

    redishandler:
      samplesthreshold: 10
      issuesthreshold: 10
      sampling:
        samplingmode: 1 # DefaultSample
        samplingLimitMaxQueue: 0
        samplingLimitAgeOut: 0s
      {{ if and .Values.agent.alligator.redishandler .Values.agent.alligator.redishandler.truncationConfig }}
      truncationConfig:
        enabled: {{ coalesce .Values.agent.alligator.noPayloadsMode .Values.agent.alligator.redishandler.truncationConfig.enabled }}
        payloadSizeLimit: {{ ternary 0 .Values.agent.alligator.redishandler.truncationConfig.payloadSizeLimit .Values.agent.alligator.noPayloadsMode }}
      {{ end }}
      {{ if and .Values.agent.alligator.redishandler .Values.agent.alligator.redishandler.obfuscationConfig }}
      obfuscationConfig:
        {{ if and .Values.agent.alligator.redishandler .Values.agent.alligator.redishandler.obfuscationConfig.keyValueConfig }}
        keyValueConfig:
          enabled: {{ coalesce .Values.agent.alligator.obfuscateData .Values.agent.alligator.redishandler.obfuscationConfig.keyValueConfig.enabled }}
          caseSensitive: {{ .Values.agent.alligator.redishandler.obfuscationConfig.keyValueConfig.caseSensitive }}
          mode: {{ .Values.agent.alligator.redishandler.obfuscationConfig.keyValueConfig.mode }} 
          specificKeys: {{ .Values.agent.alligator.redishandler.obfuscationConfig.keyValueConfig.specificKeys | toJson }}
        {{ end }}
        {{ if and .Values.agent.alligator.redishandler .Values.agent.alligator.redishandler.obfuscationConfig.unstructuredConfig }}
        unstructuredConfig: 
          enabled: {{ coalesce .Values.agent.alligator.obfuscateData .Values.agent.alligator.redishandler.obfuscationConfig.unstructuredConfig.enabled }}
        {{ end }}
      {{ end }}
      interval: 30s
      summarizerActiveTtl: 45s
      aggregationCacheSize: 4096

    amqphandler:
      samplesthreshold: 10
      issuesthreshold: 10
      sampling:
        samplingmode: 1 # DefaultSample
        samplingLimitMaxQueue: 0
        samplingLimitAgeOut: 0s
      {{ if and .Values.agent.alligator.amqphandler .Values.agent.alligator.amqphandler.truncationConfig }}
      truncationConfig:
        enabled: {{ coalesce .Values.agent.alligator.noPayloadsMode .Values.agent.alligator.amqphandler.truncationConfig.enabled }}
        payloadSizeLimit: {{ ternary 0 .Values.agent.alligator.amqphandler.truncationConfig.payloadSizeLimit .Values.agent.alligator.noPayloadsMode }}
      {{ end }}
      {{ if and .Values.agent.alligator.amqphandler .Values.agent.alligator.amqphandler.obfuscationConfig }}
      obfuscationConfig:
        {{ if and .Values.agent.alligator.amqphandler .Values.agent.alligator.amqphandler.obfuscationConfig.keyValueConfig }}
        keyValueConfig:
          enabled: {{ coalesce .Values.agent.alligator.obfuscateData .Values.agent.alligator.amqphandler.obfuscationConfig.keyValueConfig.enabled }}
          caseSensitive: {{ .Values.agent.alligator.amqphandler.obfuscationConfig.keyValueConfig.caseSensitive }}
          mode: {{ .Values.agent.alligator.amqphandler.obfuscationConfig.keyValueConfig.mode }} 
          specificKeys: {{ .Values.agent.alligator.amqphandler.obfuscationConfig.keyValueConfig.specificKeys | toJson }}
        {{ end }}
        {{ if and .Values.agent.alligator.amqphandler .Values.agent.alligator.amqphandler.obfuscationConfig.unstructuredConfig }}
        unstructuredConfig: 
          enabled: {{ coalesce .Values.agent.alligator.obfuscateData .Values.agent.alligator.amqphandler.obfuscationConfig.unstructuredConfig.enabled }}
        {{ end }}
      {{ end }}
      interval: 30s
      summarizerActiveTtl: 45s
      aggregationCacheSize: 4096

    sqlhandler:
      samplesthreshold: 10
      issuesthreshold: 10
      sampling:
        samplingmode: 1 # DefaultSample
        samplingLimitMaxQueue: 0
        samplingLimitAgeOut: 0s
      {{ if and .Values.agent.alligator.sqlhandler .Values.agent.alligator.sqlhandler.truncationConfig }}
      truncationConfig:
        enabled: {{ coalesce .Values.agent.alligator.noPayloadsMode .Values.agent.alligator.sqlhandler.truncationConfig.enabled }}
        payloadSizeLimit: {{ ternary 0 .Values.agent.alligator.sqlhandler.truncationConfig.payloadSizeLimit .Values.agent.alligator.noPayloadsMode }}
      {{ end }}
      {{ if and .Values.agent.alligator.sqlhandler .Values.agent.alligator.sqlhandler.obfuscationConfig }}
      obfuscationConfig:
        {{ if and .Values.agent.alligator.sqlhandler .Values.agent.alligator.sqlhandler.obfuscationConfig.keyValueConfig }}
        keyValueConfig:
          enabled: {{ coalesce .Values.agent.alligator.obfuscateData .Values.agent.alligator.sqlhandler.obfuscationConfig.keyValueConfig.enabled }}
          caseSensitive: {{ .Values.agent.alligator.sqlhandler.obfuscationConfig.keyValueConfig.caseSensitive }}
          mode: {{ .Values.agent.alligator.sqlhandler.obfuscationConfig.keyValueConfig.mode }} 
          specificKeys: {{ .Values.agent.alligator.sqlhandler.obfuscationConfig.keyValueConfig.specificKeys | toJson }}
        {{ end }}
        {{ if and .Values.agent.alligator.sqlhandler .Values.agent.alligator.sqlhandler.obfuscationConfig.unstructuredConfig }}
        unstructuredConfig: 
          enabled: {{ coalesce .Values.agent.alligator.obfuscateData .Values.agent.alligator.sqlhandler.obfuscationConfig.unstructuredConfig.enabled }}
        {{ end }}
      {{ end }}
      interval: 30s
      summarizerActiveTtl: 45s
      aggregationCacheSize: 4096

    kafkahandler:
      samplesthreshold: 10
      issuesthreshold: 10
      sampling:
        samplingmode: 1 # DefaultSample
        samplingLimitMaxQueue: 10
        samplingLimitAgeOut: 1s
      {{ if and .Values.agent.alligator.kafkahandler .Values.agent.alligator.kafkahandler.truncationConfig }}
      truncationConfig:
        enabled: {{ coalesce .Values.agent.alligator.noPayloadsMode .Values.agent.alligator.kafkahandler.truncationConfig.enabled }}
        payloadSizeLimit: {{ ternary 0 .Values.agent.alligator.kafkahandler.truncationConfig.payloadSizeLimit .Values.agent.alligator.noPayloadsMode }}
      {{ end }}
      {{ if and .Values.agent.alligator.kafkahandler .Values.agent.alligator.kafkahandler.obfuscationConfig }}
      obfuscationConfig:
        {{ if and .Values.agent.alligator.kafkahandler .Values.agent.alligator.kafkahandler.obfuscationConfig.keyValueConfig }}
        keyValueConfig:
          enabled: {{ coalesce .Values.agent.alligator.obfuscateData .Values.agent.alligator.kafkahandler.obfuscationConfig.keyValueConfig.enabled }}
          caseSensitive: {{ .Values.agent.alligator.kafkahandler.obfuscationConfig.keyValueConfig.caseSensitive }}
          mode: {{ .Values.agent.alligator.kafkahandler.obfuscationConfig.keyValueConfig.mode }} 
          specificKeys: {{ .Values.agent.alligator.kafkahandler.obfuscationConfig.keyValueConfig.specificKeys | toJson }}
        {{ end }}
        {{ if and .Values.agent.alligator.kafkahandler .Values.agent.alligator.kafkahandler.obfuscationConfig.unstructuredConfig }}
        unstructuredConfig: 
          enabled: {{ coalesce .Values.agent.alligator.obfuscateData .Values.agent.alligator.kafkahandler.obfuscationConfig.unstructuredConfig.enabled }}
        {{ end }}
      {{ end }}
      interval: 30s
      summarizerActiveTtl: 45s
      aggregationCacheSize: 4096

    dnshandler:
      samplesthreshold: 10
      issuesthreshold: 10
      sampling:
        samplingmode: 1 # DefaultSample
        samplingLimitMaxQueue: 10
        samplingLimitAgeOut: 1s
      {{ if and .Values.agent.alligator.dnshandler .Values.agent.alligator.dnshandler.truncationConfig }}
      truncationConfig:
        enabled: {{ coalesce .Values.agent.alligator.noPayloadsMode .Values.agent.alligator.dnshandler.truncationConfig.enabled }}
        payloadSizeLimit: {{ ternary 0 .Values.agent.alligator.dnshandler.truncationConfig.payloadSizeLimit .Values.agent.alligator.noPayloadsMode }}
      {{ end }}
      {{ if and .Values.agent.alligator.dnshandler .Values.agent.alligator.dnshandler.obfuscationConfig }}
      obfuscationConfig:
        {{ if and .Values.agent.alligator.dnshandler .Values.agent.alligator.dnshandler.obfuscationConfig.keyValueConfig }}
        keyValueConfig:
          enabled: {{ coalesce .Values.agent.alligator.obfuscateData .Values.agent.alligator.dnshandler.obfuscationConfig.keyValueConfig.enabled }}
          caseSensitive: {{ .Values.agent.alligator.dnshandler.obfuscationConfig.keyValueConfig.caseSensitive }}
          mode: {{ .Values.agent.alligator.dnshandler.obfuscationConfig.keyValueConfig.mode }} 
          specificKeys: {{ .Values.agent.alligator.dnshandler.obfuscationConfig.keyValueConfig.specificKeys | toJson }}
        {{ end }}
        {{ if and .Values.agent.alligator.dnshandler .Values.agent.alligator.dnshandler.obfuscationConfig.unstructuredConfig }}
        unstructuredConfig: 
          enabled: {{ coalesce .Values.agent.alligator.obfuscateData .Values.agent.alligator.dnshandler.obfuscationConfig.unstructuredConfig.enabled }}
        {{ end }}
      {{ end }}
      interval: 30s
      summarizerActiveTtl: 45s
      aggregationCacheSize: 300

    mongodbhandler:
      samplesthreshold: 10
      issuesthreshold: 10
      sampling:
        samplingmode: 1 # DefaultSample
        samplingLimitMaxQueue: 0
        samplingLimitAgeOut: 0s
      {{ if and .Values.agent.alligator.mongodbhandler .Values.agent.alligator.mongodbhandler.truncationConfig }}
      truncationConfig:
        enabled: {{ coalesce .Values.agent.alligator.noPayloadsMode .Values.agent.alligator.mongodbhandler.truncationConfig.enabled }}
        payloadSizeLimit: {{ ternary 0 .Values.agent.alligator.mongodbhandler.truncationConfig.payloadSizeLimit .Values.agent.alligator.noPayloadsMode }}
      {{ end }}
      {{ if and .Values.agent.alligator.mongodbhandler .Values.agent.alligator.mongodbhandler.obfuscationConfig }}
      obfuscationConfig:
        {{ if and .Values.agent.alligator.mongodbhandler .Values.agent.alligator.mongodbhandler.obfuscationConfig.keyValueConfig }}
        keyValueConfig:
          enabled: {{ coalesce .Values.agent.alligator.obfuscateData .Values.agent.alligator.mongodbhandler.obfuscationConfig.keyValueConfig.enabled }}
          caseSensitive: {{ .Values.agent.alligator.mongodbhandler.obfuscationConfig.keyValueConfig.caseSensitive }}
          mode: {{ .Values.agent.alligator.mongodbhandler.obfuscationConfig.keyValueConfig.mode }} 
          specificKeys: {{ .Values.agent.alligator.mongodbhandler.obfuscationConfig.keyValueConfig.specificKeys | toJson }}
        {{ end }}
        {{ if and .Values.agent.alligator.mongodbhandler .Values.agent.alligator.mongodbhandler.obfuscationConfig.unstructuredConfig }}
        unstructuredConfig: 
          enabled: {{ coalesce .Values.agent.alligator.obfuscateData .Values.agent.alligator.mongodbhandler.obfuscationConfig.unstructuredConfig.enabled }}
        {{ end }}
      {{ end }}
      interval: 30s
      summarizerActiveTtl: 45s
      aggregationCacheSize: 4096

    containerInfoHandler:
      samplesthreshold: 10
      issuesthreshold: 10
      sampling:
        samplingmode: 1 # DefaultSample
        samplingLimitMaxQueue: 0
        samplingLimitAgeOut: 0s
      interval: 30s
      summarizerActiveTtl: 45s
      aggregationCacheSize: 4096

    containerInfoRtHandler:
      samplesthreshold: 20
      issuesthreshold: 20
      sampling:
        samplingmode: 0 # DontSample
        samplingLimitMaxQueue: 0
        samplingLimitAgeOut: 0s
      interval: 0s
      summarizerActiveTtl: 15s
      aggregationCacheSize: 1024

    pvcIoHandler:
      sampling:
        samplingmode: 0 # DontSample
      interval: 10s
      summarizerActiveTtl: 90s
      aggregationCacheSize: 4096

    l4MetricsHandler:
      sampling:
        samplingmode: 0 # DontSample
      interval: 10s
      summarizerActiveTtl: 90s
      aggregationCacheSize: 10240

    containerStateHandler:
      samplesthreshold: 10
      issuesthreshold: 10
      sampling:
        samplingmode: 0 # DontSample
        samplingLimitMaxQueue: 0
        samplingLimitAgeOut: 0s
      interval: 30s
      summarizerActiveTtl: 45s
      aggregationCacheSize: 4096
    
    nodeinfohandler:
      samplesthreshold: 20
      issuesthreshold: 20
      sampling:
        samplingmode: 0 # DontSample
        samplingLimitMaxQueue: 0
        samplingLimitAgeOut: 0s
      interval: 1m0s
      summarizerActiveTtl: 45s
      aggregationCacheSize: 1024

    containercrashhandler:
      sampling:
        samplingmode: 0 # DontSample
      interval: 30s
      summarizerActiveTtl: 0
      aggregationCacheSize: 1024

    pvcinfohandler:
      samplesthreshold: 20
      issuesthreshold: 20
      sampling:
        samplingmode: 0 # DontSample
        samplingLimitMaxQueue: 0
        samplingLimitAgeOut: 0s
      interval: 1m0s
      summarizerActiveTtl: 45s
      aggregationCacheSize: 1024

    timeseriesstorage:
      url: {{ include "metrics-ingester.base.http.internalUrl" . }}
      tlsskipverify: true

    pidcache:
      expiration: 5m
      purge: 20s

    cluster:
      maxhosts: 10000
      maxchildrens: 40
      childcountruleoverrides: {{ toJson .Values.agent.alligator.childcountruleoverrides }}

    storage:
      timeout: 5s

    loglevel: 4 # INFO

    isk8s: true
    hostmodeconfigpath: "/config/instance_metadata.yaml"

    allowedportspercontainer: 20
    k8smetricsfetcher:
      fetchinterval: 15s
      requesttimeout: 10s

    piiDetector:
      enabled: true
      sizeLimit: 1024

    globallimiter:
      maxqueue: 20
      ageout: 100ms
      sampleeverything: false

    watchOnlyLocalNode: {{ .Values.agent.alligator.watchOnlyLocalNode }}
    floraEnabled: {{ ne .Values.mode "legacy" }}
    runningNamespace: ""
    shouldDropRunningNamespaces: {{ .Values.shouldDropRunningNamespaces }}
    tracesNamespaceFilters: {{ toYaml .Values.tracesNamespaceFilters | nindent 6 }}
    tracesWorkloadFilters: {{ toYaml .Values.tracesWorkloadFilters | nindent 6 }}
    nodelabels: {{ toYaml .Values.agent.alligator.nodelabels | nindent 6 }}
    contentTypesToDrop: {{ toYaml .Values.agent.alligator.contentTypesToDrop | nindent 6 }}
    hostHeadersToDrop: {{ toYaml .Values.agent.alligator.hostHeadersToDrop | nindent 6 }}
    headersForceSampling: {{ toYaml .Values.agent.alligator.headersForceSampling | nindent 6 }}

    apmIngestor: 
      otlpEndpoint:
        endpoint: {{ include "ingestion.traces.otlp.http.url" . }}
        enableTLS: {{ include "opentelemetry-collector.otlp.tls.enabled" . }}
        insecureSkipVerify: {{ .Values.global.ingestion.tls_skip_verify }}
        writeTimeout: 10s
        batchSize: 100
        flushInterval: 30s
      dataDog:
        proxyEnabled: {{ .Values.agent.alligator.apmIngestor.dataDog.proxyEnabled }}
        endpoint: {{ include "opentelemetry-collector.datadogapm.base.http.url" . }}
        tracesPort: {{ .Values.agent.alligator.apmIngestor.dataDog.tracesPort }}
      otel:
        proxyEnabled: {{ .Values.agent.alligator.apmIngestor.otel.proxyEnabled }}
        direct:
          enabled: {{ .Values.agent.alligator.apmIngestor.otel.direct.enabled }}
          zipkin:
            enabled: {{ .Values.agent.alligator.apmIngestor.otel.direct.zipkin.enabled }}
            port: {{ .Values.agent.alligator.apmIngestor.otel.direct.zipkin.port }}
          otlp:
            enabled: {{ .Values.agent.alligator.apmIngestor.otel.direct.otlp.enabled }}
            grpcPort: {{ .Values.agent.alligator.apmIngestor.otel.direct.otlp.grpcPort }}
            httpPort: {{ .Values.agent.alligator.apmIngestor.otel.direct.otlp.httpPort }}
          jaeger:
            enabled: {{ .Values.agent.alligator.apmIngestor.otel.direct.jaeger.enabled }}
            grpcPort: {{ .Values.agent.alligator.apmIngestor.otel.direct.jaeger.grpcPort }}
            thriftHttpPort: {{ .Values.agent.alligator.apmIngestor.otel.direct.jaeger.thriftHttpPort }}
            thriftBinaryPort: {{ .Values.agent.alligator.apmIngestor.otel.direct.jaeger.thriftBinaryPort }}
            thriftCompactPort: {{ .Values.agent.alligator.apmIngestor.otel.direct.jaeger.thriftCompactPort }}
    pprof:
      enabled: {{ include "telemetry.enabled" . }}
      interval: {{ .Values.agent.alligator.pprof.interval }}
      exponent: {{ .Values.agent.alligator.pprof.exponent }}
      cpuSamplingDuration: {{ .Values.agent.alligator.pprof.cpuSamplingDuration }}
      httpUploader:
        enabled: {{ eq .Values.agent.alligator.pprof.uploaderType "http" }}
        pushURL: {{ printf "%s/upload/pprof" (include "telemetry.metrics.base.url" .) }}
      pyroscopeUploader:
        enabled: {{ eq .Values.agent.alligator.pprof.uploaderType "pyroscope" }}
        pushURL: {{ include "telemetry.metrics.base.url" . }}

    clusterId: {{ include "groundcover.clusterId" . }}
    region: {{ .Values.region }}
    env: {{ include "groundcover.env" . }}

    k8sLogs:
      scraper:
        positionsFile: "/var/run/positions/positions.yaml"
        positionsSyncInterval: 10s
        targetSyncInterval: 10s
      clients:
      - name: "logs_client"
        enabled: true
        urlText: {{ include "opentelemetry-collector.loki.http.url" . }}
        useApiKey: true
        batchwait: 2500ms
        batchsize: 10485760
        client:
          tlsconfig:
            insecureSkipVerify: {{ .Values.global.ingestion.tls_skip_verify }}
        backoffConfig:
          minBackoff: 500ms
          maxBackoff: 5m
          maxRetries: 10
        externalLabels:
          labelSet:
            cluster_id: {{ include "groundcover.clusterId" . }}
            env_name: {{ include "groundcover.env" . }}
            job: alligator
        timeout: 10s
        useRingBuffer: {{ .Values.storeIssuesLogsOnly }}
        dropRunningNamespaceLogs: {{ .Values.dropRunningNamespaceLogs }}
        groundcoverTimeTravel: -20s
        logDropFilters: {{ toYaml .Values.logsDropFilters | nindent 10}}
        metricateLabels: false
        multiLineConfigs: {{ toYaml .Values.logsMultiLines | nindent 10}}
        decolorize: {{ .Values.decolorizeLogs }}
    otelTracesAsLogs: {{ .Values.global.ingestion.sendToVector }}
    otelPreprocess: {{ .Values.global.ingestion.sendToVector }}
    tracesOtlpEndpoint:
      endpoint: {{ include "ingestion.traces.otlp.http.url" . }}
      enableTLS: {{ include "opentelemetry-collector.otlp.tls.enabled" . }}
      insecureSkipVerify: {{ .Values.global.ingestion.tls_skip_verify }}
      writeTimeout: 10s
    logsOtlpEndpoint:
      endpoint: {{ include "ingestion.logs.otlp.http.url" . }}
      enableTLS: {{ include "opentelemetry-collector.otlp.tls.enabled" . }}
      insecureSkipVerify: {{ .Values.global.ingestion.tls_skip_verify }}
      writeTimeout: 10s
    customOtlpEndpoint:
      endpoint: {{ include "ingestion.custom.otlp.http.url" . }}
      enableTLS: {{ include "opentelemetry-collector.otlp.tls.enabled" . }}
      insecureSkipVerify: {{ .Values.global.ingestion.tls_skip_verify }}
      writeTimeout: 10s
      batchSize: 350
      flushInterval: 1s
    
    mySqlConfig:
      Cache: false
      KeepSQLAlias: true
      ReplaceDigits: true
    
    postgreSqlConfig:
      DBMS: "postgresql"
      Cache: false
      KeepSQLAlias: true
      ReplaceDigits: true

    {{ if .Values.agent.alligator.sensitiveHeadersObfuscationConfig }}
    sensitiveHeadersObfuscationConfig: 
      enabled: {{ coalesce .Values.agent.alligator.obfuscateData .Values.agent.alligator.sensitiveHeadersObfuscationConfig.enabled }}
      caseSensitive: false
      mode: {{ .Values.agent.alligator.sensitiveHeadersObfuscationConfig.mode }}
      specificKeys: {{ .Values.agent.alligator.sensitiveHeadersObfuscationConfig.specificKeys | toJson }}
    {{ end }}
kind: ConfigMap
metadata:
  labels:
    {{- include "groundcover.labels" . | nindent 4 }}
    {{- if .Values.agent.additionalLabels }}
{{ toYaml .Values.agent.additionalLabels | indent 4 }}
    {{- end }}
  annotations:
    groundcover_version: {{ default .Chart.AppVersion .Values.global.origin.tag }}
    {{- if .Values.agent.additionalAnnotations }}
{{ toYaml .Values.agent.additionalAnnotations | indent 4 }}
    {{- end }}
  name: alligator-configuration
  namespace: {{ .Release.Namespace }}
{{ end }}
