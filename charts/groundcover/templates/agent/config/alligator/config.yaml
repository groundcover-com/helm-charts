{{ if .Values.agent.enabled }}
apiVersion: v1
data:
  config.yaml: |-
    startuptimeout: 120s
    concurrency: 20
    productchansize: 1000
    tracy:
      address: "ipc:///comm/tracy.data"
      timeout: 120s
      interval: 5s

    httphandler:
      samplesthreshold: 10
      issuesthreshold: 10
      shouldSample: true
      interval: 30s

    redishandler:
      samplesthreshold: 10
      issuesthreshold: 10
      shouldSample: true
      interval: 30s  

    sqlhandler:
      samplesthreshold: 10
      issuesthreshold: 10
      shouldSample: true
      interval: 30s

    kafkahandler:
      samplesthreshold: 10
      issuesthreshold: 10
      shouldSample: true
      interval: 30s

    dnshandler:
      samplesthreshold: 10
      issuesthreshold: 10
      shouldSample: true
      interval: 30s

    connStatsHandler:
      samplesthreshold: 10
      issuesthreshold: 10
      shouldSample: false
      interval: 30s

    tcpStatsHandler:
      samplesthreshold: 10
      issuesthreshold: 10
      shouldSample: false
      interval: 30s

    containerInfoHandler:
      samplesthreshold: 10
      issuesthreshold: 10
      shouldSample: true
      interval: 30s

    containerStateHandler:
      samplesthreshold: 10
      issuesthreshold: 10
      shouldSample: false
      interval: 30s
    
    nodeinfohandler:
      samplesthreshold: 20
      issuesthreshold: 20
      shouldsample: false
      interval: 1m0s

    containerrestarthandler:
      samplesthreshold: 20
      issuesthreshold: 20
      shouldsample: true
      interval: 30s

    pidcache:
      expiration: 5m
      purge: 20s

    cluster:
      maxhosts: 10000
      maxchildrens: 40

    storage:
      timeout: 5s

    pager:
      host: "127.0.0.1"
      port: "9119"

    timeseriesstorage:
      url: "{{ template "vmagent.url" . }}"
      tlsskipverify: false

    loglevel: 4 # INFO

    isk8s: true
    hostmodeconfigpath: "/config/instance_metadata.yaml"

    allowedportspercontainer: 20
    containermetricsfetchinterval: 15s

    globallimiter:
      maxqueue: 10
      ageout: 100ms

    obfuscateData: {{ .Values.agent.alligator.obfuscateData }}
    dataRetention: {{ .Values.agent.alligator.dataRetention }}
    watchOnlyLocalNode: {{ .Values.agent.alligator.watchOnlyLocalNode }}

    runningNamespace: ""
    shouldDropRunningNamespaces: {{ .Values.shouldDropRunningNamespaces }}
    filteredNamespaces: {{ toYaml .Values.filteredNamespaces | nindent 6 }}
    nodelabels: {{ toYaml .Values.agent.alligator.nodelabels | nindent 6 }}
    contentTypesToDrop: {{ toYaml .Values.agent.alligator.contentTypesToDrop | nindent 6 }}

    promscalestorage:
      url: "{{ template "promscale.otelURL" . }}"
      tls: true
      tableWriterBatchMaxSize: 1000
      tableWriterBatchInterval: 1s
      tableWriterBatchWriteTimeout: 1s

    clusterId: {{ .Values.clusterId }}
    region: {{ .Values.region }}
    nodeInfoDispatchInterval: 15s
kind: ConfigMap
metadata:
  labels:
    {{ with .Values.global.groundcoverLabels }} 
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- if .Values.agent.additionalLabels }}
{{ toYaml .Values.agent.additionalLabels | indent 4 }}
    {{- end }}
  annotations:
    groundcover_version: {{ .Values.origin.tag }}
    {{- if .Values.agent.additionalAnnotations }}
{{ toYaml .Values.agent.additionalAnnotations | indent 4 }}
    {{- end }}
  name: alligator-configuration
  namespace: {{ .Release.Namespace }}
{{ end }}