{{ if .Values.agent.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    groundcover_version: {{ default .Chart.AppVersion .Values.global.origin.tag }}
    {{- if .Values.agent.additionalAnnotations }}
{{ toYaml .Values.agent.additionalAnnotations | indent 4 }}
    {{- end }}
  name: alligator
  namespace: {{ .Release.Namespace }}
  labels:
    {{ with .Values.global.groundcoverLabels }} 
    {{- toYaml . | nindent 4 }}
    {{- end }}
    app: alligator
    {{- if .Values.agent.additionalLabels }}
{{ toYaml .Values.agent.additionalLabels | indent 4 }}
    {{- end }}
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
  selector:
    matchLabels:
      app: alligator
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9102"
        vm.io/path: "vmetrics"
        vm.io/port: "9102"
        groundcover_version: {{ default .Chart.AppVersion .Values.global.origin.tag }}
        checksum/tracy_config: {{ include (print $.Template.BasePath "/agent/config/tracy/config.yaml") . | sha256sum }}
        checksum/alligator_config: {{ include (print $.Template.BasePath "/agent/config/alligator/config.yaml") . | sha256sum }}
        {{- if .Values.agent.additionalAnnotations }}
{{ toYaml .Values.agent.additionalAnnotations | indent 8 }}
        {{- end }}
        {{- if .Values.agent.podAnnotations }}
{{ toYaml .Values.agent.podAnnotations | indent 8 }}
        {{- end }}
      labels:
        app: alligator
        {{ with .Values.global.groundcoverLabels }} 
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.agent.additionalLabels }}
{{ toYaml .Values.agent.additionalLabels | indent 8 }}
        {{- end }}
        {{- if .Values.agent.podLabels }}
{{ toYaml .Values.agent.podLabels | indent 8 }}
        {{- end }}
    spec:
      imagePullSecrets: {{ include "imagePullSecrets" . }}
{{- if .Values.agent.tolerations }}
      tolerations:
{{ toYaml .Values.agent.tolerations | indent 8 }}
{{- end }}
{{- if .Values.agent.affinity }}
      affinity:
{{ toYaml .Values.agent.affinity | indent 8 }}
{{- end }}
{{- if .Values.agent.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.agent.nodeSelector | indent 8 }}
{{- end }}
      containers:
        - env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName              
            - name: GC_RUNNINGNAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: GC_CLUSTERID
              valueFrom:
                secretKeyRef:
                    name: groundcover-config
                    key: GC_CLUSTER_ID
            - name: GC_REGION
              valueFrom:
                secretKeyRef:
                    name: groundcover-config
                    key: GC_REGION
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  key: {{ template "groundcover.apikeySecretKey" . }}
                  name: {{ template "groundcover.apikeySecretName" . }}                        
            {{- with .Values.agent.alligator.env }}
              {{ toYaml . | nindent 12 }}
            {{- end }}                                
          image: {{ tpl .Values.agent.alligator.image.repository . }}:{{ default .Chart.AppVersion .Values.global.origin.tag }}
          resources:
{{- toYaml .Values.agent.alligator.resources | nindent 12 }}
          imagePullPolicy: Always
          name: alligator
          ports:
            - containerPort: 9102
              name: prom-metrics
              protocol: TCP
          securityContext:
            capabilities:
              add:
                - SYS_PTRACE
                - SYS_ADMIN
            privileged: true
          volumeMounts:
            - mountPath: /host
              name: host-root
              readOnly: true
            - mountPath: /sys
              name: sys
              readOnly: true
            - mountPath: /config
              name: alligator-configuration
              readOnly: false
            - mountPath: /scrape-config
              name: alligator-scrape-configuration
              readOnly: false
            - mountPath: /comm
              name: comm
              readOnly: false
            - mountPath: /var/run/positions
              name: alligator-position
            - mountPath: /var/lib/docker/containers
              name: docker
              readOnly: true
            - mountPath: /var/log/pods
              name: pods
              readOnly: true
{{ if .Values.agent.tracy.enabled }}
        - env:
            - name: PL_HOST_PATH
              value: /host
            - name: NNMSG_LISTENING_ADDRESS
              value: ipc:///comm/tracy.data
            - name: KTARGET_DATA_BYTES_PER_SEC
              value: "104857600"
            - name: KTARGET_CONTROL_BYTES_PER_SEC
              value: "5242880"
        {{- with .Values.agent.tracy.env }}
          {{ toYaml . | nindent 12 }}
        {{- end }}
          envFrom:
            - configMapRef:
                name: tracy-conf-fg9h4chctk
          image: {{ tpl .Values.agent.tracy.image.repository . }}:{{ default .Chart.AppVersion .Values.global.origin.tag }}
          resources:
{{- toYaml .Values.agent.tracy.resources | nindent 12 }}
          imagePullPolicy: Always
          name: tracy
          securityContext:
            capabilities:
              add:
                - SYS_PTRACE
                - SYS_ADMIN
            privileged: true
          volumeMounts:
            - mountPath: /host
              name: host-root
              readOnly: true
            - mountPath: /sys
              name: sys
              readOnly: true
            - mountPath: /comm
              name: comm
              readOnly: false
            - mountPath: /linux-headers
              name: linux-headers
              readOnly: true
{{- end }}
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: false
      hostPID: true
      initContainers:
{{ if .Values.agent.fetchLinuxHeaders.enabled }}
        - image:  {{tpl .Values.agent.fetchLinuxHeaders.image.repository }}:{{ default .Chart.AppVersion .Values.global.origin.tag }}
          name: fetch-linux-headers
          volumeMounts:
            - mountPath: /host
              name: host-root
              readOnly: true
            - mountPath: /linux-headers
              name: linux-headers
{{- end }}
        - name: check-promscale-ready
          image: {{ .Values.global.origin.registry }}/curl:latest
          command:
            - /bin/sh
            - -c
          args:
              - while [ $(curl -sw '%{http_code}' -k {{ template "promscale.promURL" . }}/healthz -o /dev/null) -ne 200 ]; do echo 'Waiting for promscale...'; sleep 2; done; echo promscale is up
        - args:
              - while [ $(curl -sw '%{http_code}' -k {{ template "vmagent.url" . }}/health -o /dev/null) -ne 200 ]; do echo 'Waiting for VictoriaMetrics...'; sleep 2; done; echo VictoriaMetrics is up
          command:
            - /bin/sh
            - -c
          image: {{ .Values.global.origin.registry }}/curl:latest
          name: check-vm-ready
      serviceAccountName: alligator
{{- if .Values.agent.priorityClassName }}
      priorityClassName: {{ .Values.agent.priorityClassName }}
{{- end }}
      terminationGracePeriodSeconds: 10
      volumes:
        - hostPath:
            path: /
            type: Directory
          name: host-root
        - hostPath:
            path: /sys
            type: Directory
          name: sys
        - configMap:
            defaultMode: 420
            name: alligator-configuration
          name: alligator-configuration
        - configMap:
            defaultMode: 420
            name: alligator-scrape-configuration
          name: alligator-scrape-configuration
        - emptyDir: {}
          name: comm
        - hostPath:
            path: /run/alligator-position-{{ .Release.Namespace }}
          name: alligator-position
        - hostPath:
            path: /var/lib/docker/containers
          name: docker
        - hostPath:
            path: /var/log/pods
          name: pods
        - emptyDir: {}
          name: linux-headers
        - hostPath:
            path: /var/log
          name: varlog
{{- end }}